{"version":3,"sources":["app.coffee","view1/view1.coffee","view1/view1_test.coffee","view2/view2.coffee","view2/view2_test.coffee","components/version/interpolate-filter.coffee","components/version/interpolate-filter_test.coffee","components/version/version-directive.coffee","components/version/version-directive_test.coffee","components/version/version.coffee","components/version/version_test.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["'use strict'\n\n# Declare app level module which depends on views, and components\nangular.module('myApp', [\n  'ngRoute'\n  'myApp.view1'\n  'myApp.view2'\n  'myApp.version'\n]).\nconfig([ '$routeProvider', ($routeProvider) ->\n  $routeProvider.otherwise({ redirectTo: '/view1' })\n])\n","angular.module('myApp.view1', [ 'ngRoute' ])\n\n.config([ '$routeProvider', ($routeProvider) ->\n  $routeProvider.when('/view1', {\n    templateUrl: 'view1/view1.html'\n    controller: 'View1Ctrl'\n  })\n])\n\n.controller('View1Ctrl', [ ->\n  # ...\n])\n","'use strict'\n\ndescribe('myApp.view1 module', ->\n  beforeEach(module('myApp.view1'))\n\n  describe('view1 controller', ->\n    it('should ....', inject(($controller) ->\n      # spec body\n      view1Ctrl = $controller('View1Ctrl')\n      expect(view1Ctrl).toBeDefined()\n    ))\n  )\n)\n","angular.module('myApp.view2', [ 'ngRoute' ])\n\n.config([ '$routeProvider', ($routeProvider) ->\n  $routeProvider.when('/view2', {\n    templateUrl: 'view2/view2.html'\n    controller: 'View2Ctrl'\n  })\n])\n\n.controller('View2Ctrl', [ ->\n  # ...\n])\n","'use strict'\n\ndescribe('myApp.view2 module', ->\n  beforeEach(module('myApp.view2'))\n\n  describe('view2 controller', ->\n    it('should ....', inject(($controller) ->\n      # spec body\n      view2Ctrl = $controller('View2Ctrl')\n      expect(view2Ctrl).toBeDefined()\n    ))\n  )\n)\n","angular.module('myApp.version.interpolate-filter', [])\n\n.filter('interpolate', [ 'version', (version) ->\n  (text) -> String(text).replace(/\\%VERSION\\%/mg, version)\n])\n","'use strict'\n\ndescribe('myApp.version module', ->\n  beforeEach(module('myApp.version'))\n\n  describe('interpolate filter', ->\n    beforeEach(module(($provide) ->\n      $provide.value('version', 'TEST_VER')\n    )\n\n    it('should replace VERSION', inject((interpolateFilter) ->\n      expect(interpolateFilter('before %VERSION% after')).toEqual('before TEST_VER after'))\n    ))\n  )\n)\n","angular.module('myApp.version.version-directive', [])\n\n.directive('appVersion', [ 'version', (version) ->\n  (scope, elm, attrs) ->\n    elm.text(version)\n])\n","'use strict'\n\ndescribe('myApp.version module', ->\n  beforeEach(module('myApp.version'))\n\n  describe('app-version directive', ->\n    it('should print current version', ->\n      module(($provide) ->\n        $provide.value('version', 'TEST_VER')\n      )\n\n      inject(($compile, $rootScope) ->\n        element = $compile('<span app-version></span>')($rootScope)\n        expect(element.text()).toEqual('TEST_VER')\n      )\n    )\n  )\n)\n","angular.module('myApp.version', [\n  'myApp.version.interpolate-filter'\n  'myApp.version.version-directive'\n])\n\n.value('version', '0.1')\n","'use strict'\n\ndescribe('myApp.version module', ->\n  beforeEach(module('myApp.version'))\n\n  describe('version service', ->\n    it('should return current version', inject((version) ->\n      expect(version).toEqual('0.1')\n    ))\n  )\n)\n"],"sourceRoot":"/source/"}